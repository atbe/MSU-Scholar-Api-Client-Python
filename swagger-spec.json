{
  "swagger": "2.0",
  "info": {
    "description": "This is the Pure Web Service. Listed below are all available endpoints, along with a short description.<br/>In order to use the Pure Web Service, you must enter an API key. These are generated in the Administrator tab of Pure, and issues with a given set of available endpoints.<br/>To enter your API key and begin your use, press the Authorize button to at the top of the page. You are then presented with two options for entering the API key: the first option is to use the API key in query format, and the second option is to use the API key in a header.<br/> For further documentation, see <a href=\"documentation/Default.htm\">API Documentation</a>.<br/>A new version of the API is released with each major version of Pure, and remains available for one year. This version is no longer available in Pure 5.14<br/>The old web service is deprecated, but still available <a href=\"../../../doc/\">here</a>, and it will no longer be available in Pure 5.13",
    "version": "510",
    "title": "PURE API 510",
    "contact": {
      "name": "Elsevier"
    }
  },
  "host": "scholars.opb.msu.edu",
  "basePath": "/ws/api/510",
  "schemes": ["https"],
  "tags": [
    {
      "name": "research-outputs"
    },
    {
      "name": "persons"
    },
    {
      "name": "activities"
    },
    {
      "name": "press-media"
    },
    {
      "name": "publishers"
    },
    {
      "name": "journals"
    },
    {
      "name": "external-organisations"
    },
    {
      "name": "semantic-groups"
    },
    {
      "name": "concepts"
    },
    {
      "name": "fingerprints"
    },
    {
      "name": "prizes"
    },
    {
      "name": "thesauri"
    },
    {
      "name": "organisational-units"
    },
    {
      "name": "applications"
    },
    {
      "name": "classification-schemes"
    },
    {
      "name": "external-persons"
    },
    {
      "name": "equipments"
    },
    {
      "name": "projects"
    },
    {
      "name": "changes"
    },
    {
      "name": "events"
    },
    {
      "name": "funding-opportunities"
    },
    {
      "name": "awards"
    }
  ],
  "produces": [
    "application/xml",
    "application/json"
  ],
  "paths": {
    "/activities": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Lists all activities",
        "description": "Lists all activities in the PURE installation. If filtering of the returned activities is required, see the POST version which supports additional filtering.",
        "operationId": "listActivities",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "rating",
              "modified",
              "type",
              "title",
              "startDate"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSActivityListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      },
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Complex operation for activities",
        "description": "Lists activities in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Activity.htm#post_xml\">Activity documentation</a>",
        "operationId": "listActivities",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSActivityQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSActivityListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      }
    },
    "/activities-meta/orderings": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the activity endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      }
    },
    "/activities-meta/renderings": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the activity endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      }
    },
    "/activities/{id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get activity",
        "description": "Get activity with specific ID (path parameter)",
        "operationId": "getActivity",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired activity",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSAbstractActivity"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Lists all applications",
        "description": "Lists all applications in the PURE installation. If filtering of the returned applications is required, see the POST version which supports additional filtering.",
        "operationId": "listApplications",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "owner",
              "projects",
              "endDate",
              "created",
              "firstApplicant",
              "rating",
              "firstNatureType",
              "firstFunder",
              "title",
              "fundingOpportunity",
              "relatedApplications",
              "awards",
              "typeClassification",
              "pureid",
              "modified",
              "fundingOpportunityDeadline",
              "totalAppliedAmount",
              "startDate",
              "internalapprovalworkflow",
              "applicationDate",
              "firstClassifiedSource"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSApplicationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      },
      "post": {
        "tags": [
          "applications"
        ],
        "summary": "Complex operation for applications",
        "description": "Lists applications in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Application.htm#post_xml\">Application documentation</a>",
        "operationId": "listApplications",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSApplicationsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSApplicationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      }
    },
    "/applications-meta/orderings": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the application endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      }
    },
    "/applications-meta/renderings": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the application endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      }
    },
    "/applications/{id}": {
      "get": {
        "tags": [
          "applications"
        ],
        "summary": "Get application",
        "description": "Get application with specific ID (path parameter).",
        "operationId": "getApplication",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired application",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSApplication"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      }
    },
    "/awards": {
      "get": {
        "tags": [
          "awards"
        ],
        "summary": "Lists all awards",
        "description": "Lists all awards in the PURE installation. If filtering of the returned awards is required, see the POST version which supports additional filtering.",
        "operationId": "listAwards",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "owner",
              "firstAwardholder",
              "endDate",
              "created",
              "rating",
              "firstNatureType",
              "firstFunder",
              "awardDate",
              "title",
              "totalAwardedAmount",
              "typeClassification",
              "modified",
              "totalSpendAmount",
              "startDate",
              "firstClassifiedSource"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSAwardListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      },
      "post": {
        "tags": [
          "awards"
        ],
        "summary": "Complex operation for awards",
        "description": "Lists awards in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Award.htm#post_xml\">Award documentation</a>",
        "operationId": "listAwards",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSAwardsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSAwardListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      }
    },
    "/awards-meta/orderings": {
      "get": {
        "tags": [
          "awards"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the award endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      }
    },
    "/awards-meta/renderings": {
      "get": {
        "tags": [
          "awards"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the award endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      }
    },
    "/awards/{id}": {
      "get": {
        "tags": [
          "awards"
        ],
        "summary": "Get award",
        "description": "Get award with specific ID (path parameter).",
        "operationId": "getAward",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired award",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSAward"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      }
    },
    "/awards/{id}/fingerprints": {
      "get": {
        "tags": [
          "awards"
        ],
        "summary": "Lists fingerprints on an award",
        "description": "Lists all fingerprints associated to the award specified by an ID (supplied as path parameter)",
        "operationId": "listAwardFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/changes/{idOrDate}": {
      "get": {
        "tags": [
          "changes"
        ],
        "summary": "Get changes",
        "description": "Get changes from specific audit ID or date in the yyyy-MM-dd format (e.g. 2017-04-24) and forward",
        "operationId": "getChanges",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "idOrDate",
            "in": "path",
            "description": "Id or date (in yyyy-MM-dd format) of the earliest audit entry",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSChangeListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "AbstractChange"
      }
    },
    "/classification-schemes": {
      "get": {
        "tags": [
          "classification-schemes"
        ],
        "summary": "Lists all classification schemes",
        "description": "Lists all classification schemes in the PURE installation. If filtering of the returned classification schemes is required, see the POST version which supports additional filtering.",
        "operationId": "listClassificationSchemes",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating",
              "modified",
              "description"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSClassificationSchemeListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ClassificationScheme"
      },
      "post": {
        "tags": [
          "classification-schemes"
        ],
        "summary": "Complex operation for classification schemes",
        "description": "Lists classification schemes in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_ClassificationScheme.htm#post_xml\">ClassificationScheme documentation</a>",
        "operationId": "listClassificationSchemes",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSClassificationSchemesQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSClassificationSchemeListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ClassificationScheme"
      }
    },
    "/classification-schemes-meta/orderings": {
      "get": {
        "tags": [
          "classification-schemes"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the Classification Scheme endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ClassificationScheme"
      }
    },
    "/classification-schemes-meta/renderings": {
      "get": {
        "tags": [
          "classification-schemes"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the Classification Scheme endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ClassificationScheme"
      }
    },
    "/classification-schemes/{id}": {
      "get": {
        "tags": [
          "classification-schemes"
        ],
        "summary": "Get Classification Scheme",
        "description": "Get Classification Scheme with specific uri (path parameter)",
        "operationId": "getClassificationScheme",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the desired classification scheme",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSClassificationScheme"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ClassificationScheme"
      }
    },
    "/concepts": {
      "get": {
        "tags": [
          "concepts"
        ],
        "summary": "Lists all concepts",
        "description": "Lists all concepts in the PURE installation.",
        "operationId": "listConcepts",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSConceptListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Concept"
      }
    },
    "/concepts-meta/orderings": {
      "get": {
        "tags": [
          "concepts"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the concepts endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Concept"
      }
    },
    "/concepts-meta/renderings": {
      "get": {
        "tags": [
          "concepts"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the concepts endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Concept"
      }
    },
    "/concepts/{id}": {
      "get": {
        "tags": [
          "concepts"
        ],
        "summary": "Get concept",
        "description": "Get concept with specific ID (path parameter).",
        "operationId": "getConcept",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired concept",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSConcept"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Concept"
      }
    },
    "/equipments": {
      "get": {
        "tags": [
          "equipments"
        ],
        "summary": "Lists all equipment",
        "description": "Lists all equipment in the PURE installation. If filtering of the returned equipment is required, see the POST version which supports additional filtering.",
        "operationId": "listEquipment",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "rating",
              "modified",
              "title"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSEquipmentListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Equipment"
      },
      "post": {
        "tags": [
          "equipments"
        ],
        "summary": "Complex operation for equipment",
        "description": "Lists equipment in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Equipment.htm#post_xml\">Equipment documentation</a>",
        "operationId": "listEquipment",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSEquipmentsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSEquipmentListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Equipment"
      }
    },
    "/equipments-meta/orderings": {
      "get": {
        "tags": [
          "equipments"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the equipment endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Equipment"
      }
    },
    "/equipments-meta/renderings": {
      "get": {
        "tags": [
          "equipments"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the equipment endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Equipment"
      }
    },
    "/equipments/{id}": {
      "get": {
        "tags": [
          "equipments"
        ],
        "summary": "Get equipment",
        "description": "Get equipment with specific ID (path parameter).",
        "operationId": "getEquipment",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired equipment",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSEquipment"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Equipment"
      }
    },
    "/equipments/{id}/fingerprints": {
      "get": {
        "tags": [
          "equipments"
        ],
        "summary": "Lists fingerprints on an equipment",
        "description": "Lists all fingerprints associated to the equipment specified by an ID (supplied as path parameter)",
        "operationId": "listEquipmentFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/events": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Lists all events",
        "description": "Lists all events in the PURE installation. If filtering of the returned events is required, see the POST version which supports additional filtering.",
        "operationId": "listEvents",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "rating",
              "modified",
              "title"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSEventListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Event"
      },
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Complex operation for events",
        "description": "Lists events in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Event.htm#post_xml\">Event documentation</a>",
        "operationId": "listEvents",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSEventsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSEventListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Event"
      }
    },
    "/events-meta/orderings": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the event endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Event"
      }
    },
    "/events-meta/renderings": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the event endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Event"
      }
    },
    "/events/{id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get event",
        "description": "Get event with specific ID (path parameter).",
        "operationId": "getEvent",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired event",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSEvent"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Event"
      }
    },
    "/external-organisations": {
      "get": {
        "tags": [
          "external-organisations"
        ],
        "summary": "Lists all external organisations",
        "description": "Lists all external organisations in the PURE installation. If filtering of the returned external organisations is required, see the POST version which supports additional filtering.",
        "operationId": "listExternalOrganisations",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "name",
              "rating",
              "modified",
              "type"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSExternalOrganisationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalOrganisation"
      },
      "post": {
        "tags": [
          "external-organisations"
        ],
        "summary": "Complex operation for external organisations",
        "description": "Lists external organisations in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_ExternalOrganisation.htm#post_xml\">External Organisation documentation</a>",
        "operationId": "listExternalOrganisations",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSExternalOrganisationsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSExternalOrganisationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalOrganisation"
      }
    },
    "/external-organisations-meta/orderings": {
      "get": {
        "tags": [
          "external-organisations"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the external organisation endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalOrganisation"
      }
    },
    "/external-organisations-meta/renderings": {
      "get": {
        "tags": [
          "external-organisations"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the external organisation endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalOrganisation"
      }
    },
    "/external-organisations/{id}": {
      "get": {
        "tags": [
          "external-organisations"
        ],
        "summary": "Get external organisation",
        "description": "Get external organisation with specific ID (path parameter).",
        "operationId": "getExternalOrganisation",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired external organisation",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSExternalOrganisation"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalOrganisation"
      }
    },
    "/external-persons": {
      "get": {
        "tags": [
          "external-persons"
        ],
        "summary": "Lists all external persons",
        "description": "Lists all external persons in the PURE installation. If filtering of the returned external persons is required, see the POST version which supports additional filtering.",
        "operationId": "listExternalPersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "lastName",
              "created",
              "rating",
              "modified"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSExternalPersonListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalPerson"
      },
      "post": {
        "tags": [
          "external-persons"
        ],
        "summary": "Complex operation for external persons",
        "description": "Lists external persons in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_ExternalPerson.htm#post_xml\">External person documentation</a>",
        "operationId": "listExternalPersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSExternalPersonsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSExternalPersonListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalPerson"
      }
    },
    "/external-persons-meta/orderings": {
      "get": {
        "tags": [
          "external-persons"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the external person endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalPerson"
      }
    },
    "/external-persons-meta/renderings": {
      "get": {
        "tags": [
          "external-persons"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the external person endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalPerson"
      }
    },
    "/external-persons/{id}": {
      "get": {
        "tags": [
          "external-persons"
        ],
        "summary": "Get external person",
        "description": "Get external person with specific ID (path parameter).",
        "operationId": "getExternalPerson",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired external person",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSExternalPerson"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ExternalPerson"
      }
    },
    "/fingerprints": {
      "get": {
        "tags": [
          "fingerprints"
        ],
        "summary": "Lists all fingerprints",
        "description": "Lists all fingerprints in the PURE installation. If filtering of the returned fingerprints is required, see the POST version which supports additional filtering.",
        "operationId": "listFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      },
      "post": {
        "tags": [
          "fingerprints"
        ],
        "summary": "Complex operation for fingerprints",
        "description": "Lists fingerprints in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Fingerprint.htm#post_xml\">Fingerprint documentation</a>",
        "operationId": "listFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSFingerprintsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/fingerprints-meta/orderings": {
      "get": {
        "tags": [
          "fingerprints"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the fingerprints endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/fingerprints-meta/renderings": {
      "get": {
        "tags": [
          "fingerprints"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the fingerprints endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/fingerprints/{id}": {
      "get": {
        "tags": [
          "fingerprints"
        ],
        "summary": "Get fingerprint",
        "description": "Get fingerprint with specific ID (path parameter).",
        "operationId": "getFingerprint",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired fingerprint",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprint"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/funding-opportunities": {
      "get": {
        "tags": [
          "funding-opportunities"
        ],
        "summary": "Lists all funding opportunities",
        "description": "Lists all funding opportunities in the PURE installation. If filtering of the returned funding opportunities is required, see the POST version which supports additional filtering.",
        "operationId": "listFundingOpportunities",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "awardCeiling",
              "typeClassification",
              "rating",
              "modified",
              "deadline",
              "title",
              "openingDate",
              "fundingOrganisation"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFundingOpportunityListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "FundingOpportunity"
      },
      "post": {
        "tags": [
          "funding-opportunities"
        ],
        "summary": "Complex operation for funding opportunities",
        "description": "Lists funding opportunities in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_FundingOpportunity.htm#post_xml\">FundingOpportunity documentation</a>",
        "operationId": "listFundingOpportunities",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSFundingOpportunitiesQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFundingOpportunityListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "FundingOpportunity"
      }
    },
    "/funding-opportunities-meta/orderings": {
      "get": {
        "tags": [
          "funding-opportunities"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the funding opportunities endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "FundingOpportunity"
      }
    },
    "/funding-opportunities-meta/renderings": {
      "get": {
        "tags": [
          "funding-opportunities"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the funding opportunities endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "FundingOpportunity"
      }
    },
    "/funding-opportunities/{id}": {
      "get": {
        "tags": [
          "funding-opportunities"
        ],
        "summary": "Get funding opportunity",
        "description": "Get funding opportunity with specific ID (path parameter).",
        "operationId": "getFundingOpportunity",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired funding opportunity",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFundingOpportunity"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "FundingOpportunity"
      }
    },
    "/journals": {
      "get": {
        "tags": [
          "journals"
        ],
        "summary": "Lists all journals",
        "description": "Lists all journals in the PURE installation. If filtering of the returned journals is required, see the POST version which supports additional filtering.",
        "operationId": "listJournals",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating",
              "modified",
              "title"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSJournalListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Journal"
      },
      "post": {
        "tags": [
          "journals"
        ],
        "summary": "Complex operation for journals",
        "description": "Lists journals in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Journal.htm#post_xml\">Journal documentation</a>",
        "operationId": "listJournals",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSJournalsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSJournalListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Journal"
      }
    },
    "/journals-meta/orderings": {
      "get": {
        "tags": [
          "journals"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the journal endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Journal"
      }
    },
    "/journals-meta/renderings": {
      "get": {
        "tags": [
          "journals"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the journal endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Journal"
      }
    },
    "/journals/{id}": {
      "get": {
        "tags": [
          "journals"
        ],
        "summary": "Get journal",
        "description": "Get journal with specific ID (path parameter).",
        "operationId": "getJournal",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired journal",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSJournal"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Journal"
      }
    },
    "/organisational-units": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists all organisational units",
        "description": "Lists all organisational units in the PURE installation. If filtering of the returned organisational units is required, see the POST version which supports additional filtering.",
        "operationId": "listOrganisationalUnits",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "name",
              "rating",
              "modified",
              "type"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrganisationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      },
      "post": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Complex operation for organisational units",
        "description": "Lists organisational units in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_OrganisationalUnit.htm#post_xml\">Organisational unit documentation</a>",
        "operationId": "listOrganisationalUnits",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSOrganisationsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrganisationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      }
    },
    "/organisational-units-meta/orderings": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the organisational unit endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      }
    },
    "/organisational-units-meta/renderings": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the organisational unit endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      }
    },
    "/organisational-units/active": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists all active organisational units",
        "description": "Lists all active organisational units in the PURE installation",
        "operationId": "listActiveOrganisationalUnits",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "name",
              "rating",
              "modified",
              "type"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrganisationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      }
    },
    "/organisational-units/former": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists all former organisational units",
        "description": "Lists all former organisational units in the PURE installation",
        "operationId": "listFormerOrganisationalUnits",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "created",
              "name",
              "rating",
              "modified",
              "type"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrganisationListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      }
    },
    "/organisational-units/{id}": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Get organisational unit",
        "description": "Get organisational unit with specific ID (path parameter).",
        "operationId": "getOrganisationalUnit",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired organisational unit",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrganisation"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Organisation"
      }
    },
    "/organisational-units/{id}/activities": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists activities on an organisational unit",
        "description": "Lists all activities associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitActivities",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSActivityListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      }
    },
    "/organisational-units/{id}/applications": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists applications on an organisational unit",
        "description": "Lists all applications associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitApplications",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSApplicationListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      }
    },
    "/organisational-units/{id}/awards": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists awards on an organisational unit",
        "description": "Lists all awards associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitAwards",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSAwardListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      }
    },
    "/organisational-units/{id}/fingerprints": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists fingerprints on an organisational unit",
        "description": "Lists all fingerprints associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/organisational-units/{id}/persons": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists persons on an organisational unit",
        "description": "Lists all persons associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitPersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPersonListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/organisational-units/{id}/press-media": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists press / media on an organisational unit",
        "description": "Lists all press / media associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitPressMedia",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPressMediaListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      }
    },
    "/organisational-units/{id}/prizes": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists prizes on an organisational unit",
        "description": "Lists all prizes associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitPrizes",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPrizeListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      }
    },
    "/organisational-units/{id}/projects": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists projects on an organisational unit",
        "description": "Lists all projects associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitProjects",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSUPMProjectListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/organisational-units/{id}/research-outputs": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists research outputs on an organisational unit",
        "description": "Lists all research outputs associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitResearchOutputs",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "standard",
              "detailsPortal",
              "mla",
              "author",
              "cbe",
              "authorlist",
              "long",
              "BIBTEX",
              "vancouver",
              "system",
              "apa",
              "fingerprint",
              "short",
              "RIS",
              "harvard"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSResearchOutputListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      }
    },
    "/organisational-units/{id}/student-theses": {
      "get": {
        "tags": [
          "organisational-units"
        ],
        "summary": "Lists student-theses on an organisational unit",
        "description": "Lists all student-theses associated to the organisational unit specified by an ID (supplied as path parameter)",
        "operationId": "listOrganisationalUnitStudentTheses",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSStudentThesisListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "StudentThesis"
      }
    },
    "/persons": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists all persons",
        "description": "Lists all persons in the PURE installation. If additional filtering of the amount of persons returned, see the POST version which supports additional filtering.",
        "operationId": "listPersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "lastName",
              "rating",
              "modified",
              "fundingProfileHelpRequested",
              "recommendations"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPersonListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      },
      "post": {
        "tags": [
          "persons"
        ],
        "summary": "Complex operation for persons",
        "description": "Lists persons in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Person.htm\">Person documentation</a>",
        "operationId": "listPersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSPersonsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPersonListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/persons-meta/orderings": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the person endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/persons-meta/renderings": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the person endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/persons/active": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists all active persons",
        "description": "Lists all active persons",
        "operationId": "listActivePersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "lastName",
              "rating",
              "modified",
              "fundingProfileHelpRequested",
              "recommendations"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPersonListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/persons/former": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists all former persons",
        "description": "Lists all former persons",
        "operationId": "listFormerPersons",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "lastName",
              "rating",
              "modified",
              "fundingProfileHelpRequested",
              "recommendations"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPersonListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/persons/{id}": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Get person",
        "description": "Get person with specific ID (path parameter).",
        "operationId": "getPerson",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPerson"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Person"
      }
    },
    "/persons/{id}/activities": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists activities on a person",
        "description": "Lists all activities associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonActivities",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSActivityListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Activity"
      }
    },
    "/persons/{id}/applications": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists applications on a person",
        "description": "Lists all applications associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonApplications",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSApplicationListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Application"
      }
    },
    "/persons/{id}/awards": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists awards on a person",
        "description": "Lists all awards associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonAwards",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "fingerprint",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSAwardListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Award"
      }
    },
    "/persons/{id}/curricula-vitae": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists curriculum vitae on a person",
        "description": "Lists all curriculum vitae associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonCurriculumVitae",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSCurriculumVitaeListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "CurriculumVitae"
      }
    },
    "/persons/{id}/fingerprints": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists fingerprints on a person",
        "description": "Lists all fingerprints associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/persons/{id}/press-media": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists press / media on a person",
        "description": "Lists all press / media associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonPressMedia",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPressMediaListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      }
    },
    "/persons/{id}/prizes": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists prizes on a person",
        "description": "Lists all prizes associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonPrizes",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPrizeListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      }
    },
    "/persons/{id}/projects": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists projects on a person",
        "description": "Lists all projects associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonProjects",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSUPMProjectListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/persons/{id}/research-outputs": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists research outputs on a person",
        "description": "Lists all research outputs associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonResearchOutputs",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "standard",
              "detailsPortal",
              "mla",
              "author",
              "cbe",
              "authorlist",
              "long",
              "BIBTEX",
              "vancouver",
              "system",
              "apa",
              "fingerprint",
              "short",
              "RIS",
              "harvard"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSResearchOutputListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      }
    },
    "/persons/{id}/student-theses": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "Lists student theses on a person",
        "description": "Lists all student theses associated to the person specified by an ID (supplied as path parameter)",
        "operationId": "listPersonStudentTheses",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSStudentThesisListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "StudentThesis"
      }
    },
    "/press-media": {
      "get": {
        "tags": [
          "press-media"
        ],
        "summary": "Lists all press / media",
        "description": "Lists all press / media in the PURE installation. If filtering of the returned press / media is required, see the POST version which supports additional filtering.",
        "operationId": "listPressMedia",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "date",
              "created",
              "rating",
              "modified",
              "title"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPressMediaListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      },
      "post": {
        "tags": [
          "press-media"
        ],
        "summary": "Complex operation for press / media",
        "description": "Lists press / media in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_PressMedia.htm#post_xml\">Press / Media documentation</a>",
        "operationId": "listPressMedia",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSPressMediaQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPressMediaListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      }
    },
    "/press-media-meta/orderings": {
      "get": {
        "tags": [
          "press-media"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the press / media endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      }
    },
    "/press-media-meta/renderings": {
      "get": {
        "tags": [
          "press-media"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the press / media endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      }
    },
    "/press-media/{id}": {
      "get": {
        "tags": [
          "press-media"
        ],
        "summary": "Get press / media",
        "description": "Get press / media with specific ID (path parameter).",
        "operationId": "getPressMedia",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired press / media",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSApplication"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Clipping"
      }
    },
    "/prizes": {
      "get": {
        "tags": [
          "prizes"
        ],
        "summary": "Lists all prizes",
        "description": "Lists all prizes in the PURE installation. If additional filtering of the amount of prizes returned, see the POST version which supports additional filtering.",
        "operationId": "listPrizes",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "awardedDate",
              "created",
              "rating",
              "modified",
              "type",
              "title"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPrizeListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      },
      "post": {
        "tags": [
          "prizes"
        ],
        "summary": "Complex operation for prizes",
        "description": "Lists prizes in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Prize.htm\">Prize documentation</a>",
        "operationId": "listPrizes",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSPrizesQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPrizeListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      }
    },
    "/prizes-meta/orderings": {
      "get": {
        "tags": [
          "prizes"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the prize endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      }
    },
    "/prizes-meta/renderings": {
      "get": {
        "tags": [
          "prizes"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the prize endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      }
    },
    "/prizes/{id}": {
      "get": {
        "tags": [
          "prizes"
        ],
        "summary": "Get prize",
        "description": "Get prize with specific ID (path parameter).",
        "operationId": "getPrize",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPrize"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Prize"
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Lists all projects",
        "description": "Lists all projects in the PURE installation. If filtering of the returned projects is required, see the POST version which supports additional filtering.",
        "operationId": "listProjects",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "firstParticipant",
              "owner",
              "totalAwardedAmountSum",
              "endDate",
              "created",
              "rating",
              "firstFunder",
              "firstNatureType",
              "title",
              "totalSpendAmountSum",
              "typeClassification",
              "modified",
              "startDate"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSUPMProjectListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Complex operation for projects",
        "description": "Lists projects in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Project.htm#post_xml\">Project documentation</a>",
        "operationId": "listProjects",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSUPMProjectsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSUPMProjectListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/projects-meta/orderings": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the project endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/projects-meta/renderings": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the project endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/projects/active": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Lists all active projects",
        "description": "Lists all active projects in the PURE installation",
        "operationId": "listActiveProjects",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "firstParticipant",
              "owner",
              "totalAwardedAmountSum",
              "endDate",
              "created",
              "rating",
              "firstFunder",
              "firstNatureType",
              "title",
              "totalSpendAmountSum",
              "typeClassification",
              "modified",
              "startDate"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSUPMProjectListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get project",
        "description": "Get project with specific ID (path parameter).",
        "operationId": "getProject",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired project",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSUPMProject"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Project"
      }
    },
    "/projects/{id}/fingerprints": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Lists fingerprints on a project",
        "description": "Lists all fingerprints associated to the project specified by an ID (supplied as path parameter)",
        "operationId": "listProjectFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/publishers": {
      "get": {
        "tags": [
          "publishers"
        ],
        "summary": "Lists all publishers",
        "description": "Lists all publishers in the PURE installation. If filtering is required for the the returned publishers, see the POST version which supports additional filtering.",
        "operationId": "listPublishers",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating",
              "name",
              "modified"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPublishersListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Publisher"
      },
      "post": {
        "tags": [
          "publishers"
        ],
        "summary": "Complex operation for publishers",
        "description": "Lists publishers in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_Publisher.htm#post_xml\">Publisher documentation</a>",
        "operationId": "listPublishers",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSPublishersQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPublishersListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Publisher"
      }
    },
    "/publishers-meta/orderings": {
      "get": {
        "tags": [
          "publishers"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the publisher endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Publisher"
      }
    },
    "/publishers-meta/renderings": {
      "get": {
        "tags": [
          "publishers"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the publisher endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Publisher"
      }
    },
    "/publishers/approved": {
      "get": {
        "tags": [
          "publishers"
        ],
        "summary": "Get approved publishers",
        "description": "Lists the publishers in the PURE installation which are in the 'approved' workflow step.",
        "operationId": "listApprovedPublishers",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating",
              "name",
              "modified"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPublishersListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Publisher"
      }
    },
    "/publishers/{id}": {
      "get": {
        "tags": [
          "publishers"
        ],
        "summary": "Get publisher",
        "description": "Get the publisher with specific ID (path parameter).",
        "operationId": "getPublisher",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired publisher",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system",
              "short",
              "long"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSPublisher"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Publisher"
      }
    },
    "/research-outputs": {
      "get": {
        "tags": [
          "research-outputs"
        ],
        "summary": "Lists all research outputs",
        "description": "Lists all research outputs in the PURE installation. If filtering of the returned research outputs is required, see the POST version which supports additional filtering.",
        "operationId": "listResearchOutputs",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "publicationYearAndAuthor",
              "publicationYearAndTypeAndAuthor",
              "created",
              "rating",
              "typeAndAuthor",
              "totalCitations",
              "type",
              "title",
              "typeAndYear",
              "authorLastName",
              "publicationYearOnly",
              "modified",
              "publicationYear",
              "category",
              "firstAuthor"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "standard",
              "detailsPortal",
              "mla",
              "author",
              "cbe",
              "authorlist",
              "long",
              "BIBTEX",
              "vancouver",
              "system",
              "apa",
              "fingerprint",
              "short",
              "RIS",
              "harvard"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSResearchOutputListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      },
      "post": {
        "tags": [
          "research-outputs"
        ],
        "summary": "Complex operation for research output",
        "description": "Lists research outputs in the PURE installation, similar to the GET version, instead of using parameters to alter the response, an XML document is posted with the request. The XML document contains fields for all the parameters available for the GET version, but also additional filtering options. For documentation of the XML format see <a href=\"documentation/Content/Topics/CT_ResearchOutput.htm#post_xml\">Research Output documentation</a>",
        "operationId": "listResearchOutputs",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WSResearchOutputsQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSResearchOutputListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      }
    },
    "/research-outputs-meta/orderings": {
      "get": {
        "tags": [
          "research-outputs"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the research-output endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      }
    },
    "/research-outputs-meta/renderings": {
      "get": {
        "tags": [
          "research-outputs"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the research-output endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      }
    },
    "/research-outputs/{id}": {
      "get": {
        "tags": [
          "research-outputs"
        ],
        "summary": "Get research output",
        "description": "Get research output with specific ID (path parameter).",
        "operationId": "getResearchOutput",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired research Output",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "standard",
              "detailsPortal",
              "mla",
              "author",
              "cbe",
              "authorlist",
              "long",
              "BIBTEX",
              "vancouver",
              "system",
              "apa",
              "fingerprint",
              "short",
              "RIS",
              "harvard"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSResearchOutput"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "ResearchOutput"
      }
    },
    "/research-outputs/{id}/fingerprints": {
      "get": {
        "tags": [
          "research-outputs"
        ],
        "summary": "Lists impacts on a research-output",
        "description": "Lists all fingerprints associated to the research-output specified by an ID (supplied as path parameter)",
        "operationId": "listResearchOutputFingerprints",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSFingerprintListResult"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Fingerprint"
      }
    },
    "/semantic-groups": {
      "get": {
        "tags": [
          "semantic-groups"
        ],
        "summary": "Lists all semanticGroups",
        "description": "Lists all semantic groups in the PURE installation.",
        "operationId": "listSemanticGroups",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSSemanticGroupListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "SemanticGroup"
      }
    },
    "/semantic-groups-meta/orderings": {
      "get": {
        "tags": [
          "semantic-groups"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the semantic groups endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "SemanticGroup"
      }
    },
    "/semantic-groups-meta/renderings": {
      "get": {
        "tags": [
          "semantic-groups"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the semantic groups endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "SemanticGroup"
      }
    },
    "/semantic-groups/{id}": {
      "get": {
        "tags": [
          "semantic-groups"
        ],
        "summary": "Get semantic group",
        "description": "Get semantic group with specific ID (path parameter).",
        "operationId": "getSemanticGroup",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired semantic group",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSSemanticGroup"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "SemanticGroup"
      }
    },
    "/thesauri": {
      "get": {
        "tags": [
          "thesauri"
        ],
        "summary": "Lists all thesauri",
        "description": "Lists all thesauri in the PURE installation.",
        "operationId": "listThesauri",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Free text search string using Lucene query syntax. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#q_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Specify the ordering of content in the result. Default: ID ascending. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#order_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "rating"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "linkingStrategy",
            "in": "query",
            "description": "Specifies the linking strategy to use used when creating HTML renderings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#linkingStrategy_param\">Read more</a>",
            "required": false,
            "type": "string",
            "enum": [
              "documentLinkingStrategy",
              "portalLinkingStrategy",
              "noLinkingStrategy",
              "externalSourceIdLinkingStrategy"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Enter the number of results per window. Default: 10. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Enter the offset into the total result set where items should be returned from. Default: 0. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#size_offset_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Enter the desired page number. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Enter the desired number of results per page. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#page_size_param\">Read more</a>",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSThesauriListResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Thesauri"
      }
    },
    "/thesauri-meta/orderings": {
      "get": {
        "tags": [
          "thesauri"
        ],
        "summary": "Lists available orderings",
        "description": "Lists all orderings available to the thesauri endpoint. These values can be used by the order parameter",
        "operationId": "getAvailableOrderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSOrderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Thesauri"
      }
    },
    "/thesauri-meta/renderings": {
      "get": {
        "tags": [
          "thesauri"
        ],
        "summary": "Lists available renderings",
        "description": "Lists all renderings available to the thesauri endpoint. These values can be used by the rendering parameter",
        "operationId": "getAvailableRenderings",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WSRenderingsList"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Thesauri"
      }
    },
    "/thesauri/{id}": {
      "get": {
        "tags": [
          "thesauri"
        ],
        "summary": "Get thesauri",
        "description": "Get thesauri with specific ID (path parameter).",
        "operationId": "getThesauri",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the desired thesauri",
            "required": true,
            "type": "string"
          },
          {
            "name": "idClassification",
            "in": "query",
            "description": "Specifies an optional classification used to specify which type of ID should be used in the match. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#idclassification_param\">Read more</a>",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Limit the fields included in the response. E.g. 'nameVariants.nameVariant' will only return the name variants. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fields_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Enter the desired locale. E.g. 'en_GB' will only return the English text strings. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#locale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "en_US"
            ]
          },
          {
            "name": "fallbackLocale",
            "in": "query",
            "description": "Fallback locale string. Syntax is 'Locale1=>Locale2' to map Locale1 to Locale2. Example: 'da_DK=>en_GB'. Locale1 must be equal to locale provided in the locale string. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#fallbackLocale_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "rendering",
            "in": "query",
            "description": "HTML rendering formats. If rendering formats are specified, the content will be returned in these formats instead of XML. If XML is also wanted, it can be included using the fields parameter. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#rendering_param\">Read more</a>",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "system"
            ]
          },
          {
            "name": "returnUsedContent",
            "in": "query",
            "description": "If 'true', the id's of the content used to create HTML renderings are returned as part of the result. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#usedContent_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "navigationLink",
            "in": "query",
            "description": "Include navigation links for paging and content. Default: true. <a href=\"documentation/Content/Topics/Parameter_Descriptions.htm#navLink_param\">Read more</a>",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/WSThesauri"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/WSErrorResult"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          },
          {
            "api-key": []
          }
        ],
        "x-PureFamily": "Thesauri"
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "apiKey",
      "in": "query"
    },
    "api-key": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    }
  },
  "definitions": {
    "WSPrizeRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSPrize"
        }
      }
    },
    "WSExternalPersonListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSExternalPerson"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSFundingOpportunityEligibility": {
      "type": "object",
      "properties": {
        "eligibilityTypes": {
          "type": "array",
          "xml": {
            "name": "eligibilityType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "eligibilityFulfillmentTypes": {
          "type": "array",
          "xml": {
            "name": "eligibilityFulfillmentType"
          },
          "items": {
            "$ref": "#/definitions/WSEligibilityFulfillmentType"
          }
        }
      }
    },
    "WSDataSetPhysicalData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "title": {
          "type": "string"
        },
        "storageLocation": {
          "type": "string"
        },
        "accessDescription": {
          "type": "string"
        },
        "media": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        }
      }
    },
    "WSInternalExternalOrganisationAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "externalOrganisation": {
          "xml": {
            "name": "externalOrganisationalUnit"
          },
          "$ref": "#/definitions/WSExternalOrganisationRef"
        }
      }
    },
    "WSEventListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSEvent"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSApplicationStatus": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        }
      }
    },
    "WSStudentOrganisationAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "affiliationId": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "xml": {
            "name": "address",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAddress"
          }
        },
        "emails": {
          "type": "array",
          "xml": {
            "name": "email",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "xml": {
            "name": "phoneNumber",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "employmentTypes": {
          "type": "array",
          "xml": {
            "name": "employmentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "webAddresses": {
          "type": "array",
          "xml": {
            "name": "webAddress",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "fte": {
          "type": "number",
          "format": "double"
        },
        "startYear": {
          "type": "string"
        },
        "studentTypeDescriptions": {
          "type": "array",
          "xml": {
            "name": "studentTypeDescription"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "programme": {
          "type": "string"
        },
        "expectedStudyDuration": {
          "type": "integer",
          "format": "int32"
        },
        "minStudyDuration": {
          "type": "integer",
          "format": "int32"
        },
        "maxStudyDuration": {
          "type": "integer",
          "format": "int32"
        },
        "programmeYear": {
          "type": "string"
        },
        "initialSubmissionsDate": {
          "type": "string",
          "format": "date-time"
        },
        "expectedEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "nationalities": {
          "type": "array",
          "xml": {
            "name": "nationality"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "studentResidencyFlags": {
          "type": "array",
          "xml": {
            "name": "studentResidencyFlag"
          },
          "items": {
            "$ref": "#/definitions/WSResidencyFlag"
          }
        },
        "countryOfDomiciles": {
          "type": "array",
          "xml": {
            "name": "countryOfDomicile"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "awardGained": {
          "type": "string"
        },
        "projectTitles": {
          "type": "array",
          "xml": {
            "name": "projectTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "awardDate": {
          "type": "string",
          "format": "date-time"
        },
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "primaryAssociation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSCourseListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSCourse"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSPublisherRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "publisher": {
          "$ref": "#/definitions/WSPublisher"
        }
      }
    },
    "WSReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSReferenceType"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedPersonAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "url": {
          "type": "string"
        },
        "medium": {
          "type": "string"
        },
        "mediaTypes": {
          "type": "array",
          "xml": {
            "name": "mediaType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "degreeOfRecognitions": {
          "type": "array",
          "xml": {
            "name": "degreeOfRecognition"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "subdivisions": {
          "type": "array",
          "xml": {
            "name": "subdivision"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "author": {
          "type": "string"
        },
        "extent": {
          "type": "string"
        },
        "newsfloFragment": {
          "type": "string",
          "description": "Only available when Newsflo integration is enabled"
        },
        "newsfloRanks": {
          "type": "array",
          "xml": {
            "name": "newsfloRank"
          },
          "description": "Only available when Newsflo integration is enabled",
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        }
      }
    },
    "WSDataSetListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSDataSet"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSClassificationScheme": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "baseUri": {
          "type": "string"
        },
        "typeClassifications": {
          "type": "array",
          "xml": {
            "name": "typeClassification",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "associatedSchemes": {
          "type": "array",
          "xml": {
            "name": "associatedScheme",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassificationSchemeRef"
          }
        },
        "containedClassifications": {
          "type": "array",
          "xml": {
            "name": "containedClassification",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "classificationScheme"
      }
    },
    "WSPersonsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "employmentTypeUris": {
          "type": "array",
          "xml": {
            "name": "employmentTypeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "employmentStatus": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "FORMER"
          ]
        },
        "employmentPeriod": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "personOrganisationAssociationTypes": {
          "type": "array",
          "xml": {
            "name": "associationType"
          },
          "items": {
            "type": "string",
            "enum": [
              "STAFF",
              "STUDENTS",
              "VISITING_SCHOLARS",
              "HONORARY_STAFF"
            ]
          }
        },
        "forOrganisations": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        }
      },
      "xml": {
        "name": "personsQuery"
      }
    },
    "WSClassification": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "uri": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSImpactRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSImpact"
        }
      }
    },
    "WSClassificationSchemeListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSClassificationScheme"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSScopusMetrics": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "citescore": {
          "type": "number",
          "format": "double"
        },
        "snip": {
          "type": "number",
          "format": "double"
        },
        "sjr": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSChangeListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "lastId": {
          "type": "integer",
          "format": "int64"
        },
        "moreChanges": {
          "type": "boolean",
          "default": false
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSAbstractChange"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSReferenceType": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "CONTRIBUTION",
            "COVERAGE"
          ]
        }
      }
    },
    "WSClassifiedInternalExternalPersonAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        }
      }
    },
    "WSRankedConcept": {
      "type": "object",
      "properties": {
        "conceptUuid": {
          "type": "string",
          "xml": {
            "name": "uuid",
            "attribute": true
          }
        },
        "rank": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "type": "integer",
          "format": "int32"
        },
        "weightedRank": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSPrizesQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "degreeOfRecognitionUris": {
          "type": "array",
          "xml": {
            "name": "degreeOfRecognitionUri"
          },
          "items": {
            "type": "string"
          }
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        }
      },
      "xml": {
        "name": "prizesQuery"
      }
    },
    "WSPersonEducation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "fieldOfStudies": {
          "type": "array",
          "xml": {
            "name": "fieldOfStudy"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "qualifications": {
          "type": "array",
          "xml": {
            "name": "qualification"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "awardDate": {
          "type": "string",
          "format": "date-time"
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSInternalExternalOrganisationAssociation"
          }
        },
        "projectTitles": {
          "type": "array",
          "xml": {
            "name": "projectTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        }
      }
    },
    "WSDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "title": {
          "type": "string"
        },
        "documentTypes": {
          "type": "array",
          "xml": {
            "name": "documentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "url": {
          "type": "string"
        },
        "documentLicenses": {
          "type": "array",
          "xml": {
            "name": "documentLicense"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "visibleOnPortalDate": {
          "type": "string",
          "format": "date-time"
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "creator": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WSSemanticGroupListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSSemanticGroup"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSClassifiedAuthorAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "groupAuthor": {
          "type": "string"
        },
        "contributionDescription": {
          "type": "string"
        },
        "contributionPercentage": {
          "type": "number",
          "format": "double"
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "hidden": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSVisitingScholarOrganisationAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "affiliationId": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "xml": {
            "name": "address",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAddress"
          }
        },
        "emails": {
          "type": "array",
          "xml": {
            "name": "email",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "xml": {
            "name": "phoneNumber",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "employmentTypes": {
          "type": "array",
          "xml": {
            "name": "employmentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "webAddresses": {
          "type": "array",
          "xml": {
            "name": "webAddress",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "purposeOfStay": {
          "type": "string"
        },
        "visitorFrom": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "jobDescriptions": {
          "type": "array",
          "xml": {
            "name": "jobDescription"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "jobTitles": {
          "type": "array",
          "xml": {
            "name": "jobTitle"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "primaryAssociation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSClassifiedFileRef": {
      "type": "object",
      "properties": {
        "typeUri": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "typeLocale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "url": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "filename": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "mimetype": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSEquipmentListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSEquipment"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSEthicalReviewDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "title": {
          "type": "string"
        },
        "documentTypes": {
          "type": "array",
          "xml": {
            "name": "documentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "url": {
          "type": "string"
        },
        "documentLicenses": {
          "type": "array",
          "xml": {
            "name": "documentLicense"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "visibleOnPortalDate": {
          "type": "string",
          "format": "date-time"
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "creator": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "documentVersionTypes": {
          "type": "array",
          "xml": {
            "name": "documentVersionType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        }
      }
    },
    "WSMetaData": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "baseVersion": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "coreVersion": {
          "type": "string"
        },
        "currentUsername": {
          "type": "string"
        },
        "currentAuthenticationScopeName": {
          "type": "string"
        },
        "dateFormats": {
          "type": "array",
          "xml": {
            "name": "dateFormat",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSMetaDateFormat"
          }
        },
        "interfaceLocales": {
          "type": "array",
          "xml": {
            "name": "interfaceLocale",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "submissionLocales": {
          "type": "array",
          "xml": {
            "name": "submissionLocale",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "currency": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "features": {
          "type": "array",
          "xml": {
            "name": "feature",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSMetaFeature"
          }
        }
      },
      "xml": {
        "name": "metaData"
      }
    },
    "WSClassifiedAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "addressTypes": {
          "type": "array",
          "xml": {
            "name": "addressType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "addressLines": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "building": {
          "type": "string"
        },
        "postalcode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "subdivisions": {
          "type": "array",
          "xml": {
            "name": "subdivision"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "geoLocation": {
          "$ref": "#/definitions/WSGeoLocation"
        }
      }
    },
    "WSPersonRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSPerson"
        }
      }
    },
    "WSAwardsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "financial": {
          "type": "boolean",
          "default": false
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "funders": {
          "$ref": "#/definitions/WSExternalOrganisationsQuery"
        },
        "externalCollaborators": {
          "$ref": "#/definitions/WSExternalOrganisationsQuery"
        },
        "internalCollaborators": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "managingOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forProjects": {
          "$ref": "#/definitions/WSUPMProjectsQuery"
        }
      },
      "xml": {
        "name": "awardsQuery"
      }
    },
    "WSSemanticGroupRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSSemanticGroupRef"
        }
      }
    },
    "WSYearlyBudget": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "budget": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSOrganisationsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "organisationalUnitTypeUris": {
          "type": "array",
          "xml": {
            "name": "organisationalUnitTypeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "organisationPeriodStatus": {
          "type": "string",
          "xml": {
            "name": "organisationalUnitPeriodStatus"
          },
          "enum": [
            "ACTIVE",
            "FORMER"
          ]
        }
      },
      "xml": {
        "name": "organisationalUnitsQuery"
      }
    },
    "WSCourseOccurrence": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "semesters": {
          "type": "array",
          "xml": {
            "name": "semester"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "lecturers": {
          "type": "array",
          "xml": {
            "name": "lecturer",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedPersonAssociation"
          }
        },
        "numberOfStudents": {
          "type": "integer",
          "format": "int32"
        },
        "grade": {
          "type": "string"
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        }
      }
    },
    "WSConceptListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSConcept"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSActivityListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSAbstractActivity"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSEthicalReviewReply": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "PENDING",
            "APPROVED",
            "DECLINED"
          ]
        }
      }
    },
    "WSMetaDateFormat": {
      "type": "object",
      "properties": {
        "formatName": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatPattern": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSClassifiedName": {
      "type": "object",
      "properties": {
        "classifications": {
          "type": "array",
          "xml": {
            "name": "classification"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "name": {
          "$ref": "#/definitions/WSName"
        }
      }
    },
    "WSExternalableInformation": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        },
        "externallyManaged": {
          "type": "boolean",
          "default": false
        },
        "secondarySources": {
          "type": "array",
          "xml": {
            "name": "secondarySource",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSSecondarySource"
          }
        }
      }
    },
    "WSPublicationStatus": {
      "type": "object",
      "properties": {
        "current": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "publicationStatuses": {
          "type": "array",
          "xml": {
            "name": "publicationStatus"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "publicationDate": {
          "$ref": "#/definitions/WSCompoundDate"
        }
      }
    },
    "WSLocalizedString": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WSElectronicVersionAdditionalFileAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "licenseTypes": {
          "type": "array",
          "xml": {
            "name": "licenseType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "userDefinedLicense": {
          "type": "string"
        },
        "visibleOnPortalDate": {
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "file": {
          "$ref": "#/definitions/WSFileRef"
        },
        "title": {
          "type": "string"
        },
        "accessTypes": {
          "type": "array",
          "xml": {
            "name": "accessType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "embargoStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "embargoEndDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WSTemporalTitle": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "endDate": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSImpactListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSImpact"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSPressMediaListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSPressMedia"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSImpactEvidence": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "evidenceTitles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "evidenceIndicators": {
          "type": "array",
          "xml": {
            "name": "indicator"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "evidenceSummaries": {
          "type": "array",
          "xml": {
            "name": "summary"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "evidenceContactInformations": {
          "type": "array",
          "xml": {
            "name": "evidenceContactInformation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSEvidenceContactInformation"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        }
      }
    },
    "WSImpactsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "natureClassificationUris": {
          "type": "array",
          "xml": {
            "name": "natureClassificationUri"
          },
          "items": {
            "type": "string"
          }
        },
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "type": "string"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        }
      },
      "xml": {
        "name": "impactsQuery"
      }
    },
    "WSStudentThesis": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "languages": {
          "type": "array",
          "xml": {
            "name": "language"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "title": {
          "type": "string"
        },
        "subTitle": {
          "type": "string"
        },
        "translatedTitles": {
          "type": "array",
          "xml": {
            "name": "translatedTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "translatedSubTitles": {
          "type": "array",
          "xml": {
            "name": "translatedSubTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "abstracts": {
          "type": "array",
          "xml": {
            "name": "abstract"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAuthorAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "supervisors": {
          "type": "array",
          "xml": {
            "name": "supervisor",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedInternalExternalPersonAssociation"
          }
        },
        "awardDate": {
          "$ref": "#/definitions/WSCompoundDate"
        },
        "awardingInstitutions": {
          "type": "array",
          "xml": {
            "name": "awardingInstitution",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSInternalExternalOrganisationAssociation"
          }
        },
        "sponsors": {
          "type": "array",
          "xml": {
            "name": "sponsor",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSStudentThesisDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "bibliographicalNotes": {
          "type": "array",
          "xml": {
            "name": "bibliographicalNote"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivities",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the DataSet module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        }
      },
      "xml": {
        "name": "studentThesis"
      }
    },
    "WSKeyword": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "uri": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSEthicalReviewsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        }
      },
      "xml": {
        "name": "ethicalReviewsQuery"
      }
    },
    "WSStudentThesisRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSStudentThesis"
        }
      }
    },
    "WSEligibilityFulfillmentType": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "RECOMMENDATION",
            "REQUIREMENT"
          ]
        }
      }
    },
    "WSName": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "WSHonoraryStaffOrganisationAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "affiliationId": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "xml": {
            "name": "address",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAddress"
          }
        },
        "emails": {
          "type": "array",
          "xml": {
            "name": "email",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "xml": {
            "name": "phoneNumber",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "employmentTypes": {
          "type": "array",
          "xml": {
            "name": "employmentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "webAddresses": {
          "type": "array",
          "xml": {
            "name": "webAddress",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "jobDescriptions": {
          "type": "array",
          "xml": {
            "name": "jobDescription"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "jobTitles": {
          "type": "array",
          "xml": {
            "name": "jobTitle"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "primaryAssociation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSDataSetRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSDataSet"
        }
      }
    },
    "WSEthicalReviewListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSEthicalReview"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSEthicalReviewRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSEthicalReview"
        }
      }
    },
    "WSPublishersListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSPublisher"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSDataSetsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forPublishers": {
          "$ref": "#/definitions/WSPublishersQuery"
        }
      },
      "xml": {
        "name": "dataSetsQuery"
      }
    },
    "WSUPMProjectStatus": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "FINISHED",
            "CURTAILED"
          ]
        }
      }
    },
    "WSCourse": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "levels": {
          "type": "array",
          "xml": {
            "name": "level"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "formats": {
          "type": "array",
          "xml": {
            "name": "format"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "creators": {
          "type": "array",
          "xml": {
            "name": "creator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedCourseDevelopedByAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "occurrences": {
          "type": "array",
          "xml": {
            "name": "courseOccurrence",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSCourseOccurrence"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordgroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        }
      },
      "xml": {
        "name": "course"
      }
    },
    "WSEvidenceContactInformation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "contactName": {
          "type": "string"
        },
        "contactDetails": {
          "type": "string"
        },
        "corroborateText": {
          "type": "string"
        },
        "consentObtained": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSFundingOpportunityListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSFundingOpportunity"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSConcept": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "thesauri": {
          "$ref": "#/definitions/WSThesauriRef"
        },
        "conceptId": {
          "type": "string"
        },
        "parentConcepts": {
          "type": "array",
          "xml": {
            "name": "concept",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSConceptRef"
          }
        },
        "semanticGroups": {
          "type": "array",
          "xml": {
            "name": "semanticGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSSemanticGroupRef"
          }
        },
        "name": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "terms": {
          "type": "array",
          "xml": {
            "name": "term",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "idf": {
          "type": "number",
          "format": "double"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "concept"
      }
    },
    "WSThesauriRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSThesauriRef"
        }
      }
    },
    "WSExternalOrganisationRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSExternalOrganisation"
        }
      }
    },
    "WSContentInformation": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "portalUrl": {
          "type": "string"
        },
        "usedContent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSUsedContent"
          }
        },
        "previousUuids": {
          "type": "array",
          "xml": {
            "name": "previousUuid",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WSResearchOutputsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "publicationStatuses": {
          "type": "array",
          "xml": {
            "name": "publicationStatus"
          },
          "items": {
            "type": "string"
          }
        },
        "publicationCategories": {
          "type": "array",
          "xml": {
            "name": "publicationCategory"
          },
          "items": {
            "type": "string"
          }
        },
        "peerReviewed": {
          "type": "boolean",
          "default": false
        },
        "internationalPeerReviewed": {
          "type": "boolean",
          "default": false
        },
        "forJournals": {
          "$ref": "#/definitions/WSJournalsQuery"
        },
        "forPublishers": {
          "$ref": "#/definitions/WSPublishersQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "workflowSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "researchOutputsQuery"
      }
    },
    "WSFundingOpportunity": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "associatedId",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "announcementUrl": {
          "type": "string"
        },
        "fundingOrganisation": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "openingDate": {
          "type": "string",
          "format": "date-time"
        },
        "letterOfIntentDate": {
          "type": "string",
          "format": "date-time"
        },
        "deadline": {
          "type": "string",
          "format": "date-time"
        },
        "active": {
          "type": "boolean",
          "default": false
        },
        "awardCeiling": {
          "type": "number",
          "format": "double"
        },
        "awardCeilingCurrencies": {
          "type": "array",
          "xml": {
            "name": "awardCeilingCurrency"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "estimatedFunding": {
          "type": "number",
          "format": "double"
        },
        "estimatedFundingCurrencies": {
          "type": "array",
          "xml": {
            "name": "estimatedFundingCurrency"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "eligibilities": {
          "type": "array",
          "xml": {
            "name": "eligibility",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSFundingOpportunityEligibility"
          }
        },
        "academicDegreeEligibilities": {
          "type": "array",
          "xml": {
            "name": "academicDegreeEligibility",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSFundingOpportunityEligibility"
          }
        },
        "limitedSubmission": {
          "type": "boolean",
          "default": false
        },
        "numberOfAnnualApplicationsPerHEI": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfAwards": {
          "type": "integer",
          "format": "int32"
        },
        "openAccessRequirements": {
          "type": "boolean",
          "default": false
        },
        "applications": {
          "type": "array",
          "xml": {
            "name": "application",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSApplicationRef"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "fundingOpportunity"
      }
    },
    "WSResearchOutputMetric": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WSHtmlRendering": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "html": {
          "type": "string"
        }
      }
    },
    "WSThesauri": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "acronym": {
          "type": "string"
        },
        "workflow": {
          "type": "string"
        },
        "name": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "thesaurusVersion": {
          "type": "string"
        },
        "description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "thesauri"
      }
    },
    "WSCurriculumVitae": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "title": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "blocks": {
          "type": "array",
          "xml": {
            "name": "block",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAbstractCurriculumVitaeBlock"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        }
      },
      "xml": {
        "name": "curriculumVitae"
      }
    },
    "WSAwardListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSAward"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSPrize": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "categories": {
          "type": "array",
          "xml": {
            "name": "category"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "awardDate": {
          "$ref": "#/definitions/WSCompoundDate"
        },
        "degreeOfRecognitions": {
          "type": "array",
          "xml": {
            "name": "degreeOfRecognition"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "grantingOrganisations": {
          "type": "array",
          "xml": {
            "name": "grantingOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSInternalExternalOrganisationAssociation"
          }
        },
        "event": {
          "xml": {
            "name": "awardedAtEvent"
          },
          "$ref": "#/definitions/WSEventRef"
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "receiversOfPrize": {
          "type": "array",
          "xml": {
            "name": "receiverOfPrize",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedPersonAssociation"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrizes",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the DataSet module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedStudentThesis": {
          "type": "array",
          "xml": {
            "name": "relatedStudentTheses",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "prize"
      }
    },
    "WSActivityQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "categoryUris": {
          "type": "array",
          "xml": {
            "name": "categoryUri"
          },
          "items": {
            "type": "string"
          }
        },
        "degreeOfRecognitionUris": {
          "type": "array",
          "xml": {
            "name": "degreeOfRecognitionUri"
          },
          "items": {
            "type": "string"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forResearchOutputs": {
          "$ref": "#/definitions/WSResearchOutputsQuery"
        }
      },
      "xml": {
        "name": "activitiesQuery"
      }
    },
    "WSClassifiedApplicantAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "academicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSFingerprint": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "contentId": {
          "type": "integer",
          "format": "int64"
        },
        "contentUuid": {
          "type": "string"
        },
        "contentFamily": {
          "type": "string"
        },
        "contentVersion": {
          "type": "integer",
          "format": "int32"
        },
        "concepts": {
          "type": "array",
          "xml": {
            "name": "concept",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSRankedConcept"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "fingerprint"
      }
    },
    "WSClassifiedValue": {
      "type": "object",
      "properties": {
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "typeUri": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "typeLocale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WSSemanticGroup": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "thesauri": {
          "$ref": "#/definitions/WSThesauriRef"
        },
        "semanticGroupId": {
          "type": "string"
        },
        "name": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "semanticGroup"
      }
    },
    "WSFundingCollaboratorAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "collaborator": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "institutionalPart": {
          "type": "number",
          "format": "double"
        },
        "estimatedValue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSUPMProjectAssociation": {
      "type": "object",
      "properties": {
        "relationTypes": {
          "type": "array",
          "xml": {
            "name": "relationType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "project": {
          "$ref": "#/definitions/WSUPMProjectRef"
        }
      }
    },
    "WSEvent": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "subTitles": {
          "type": "array",
          "xml": {
            "name": "subTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "abbreviatedTitles": {
          "type": "array",
          "xml": {
            "name": "abbreviatedTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "conferenceNumber": {
          "type": "string"
        },
        "description": {
          "type": "array",
          "xml": {
            "name": "descriptions",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "degreeOfRecognitions": {
          "type": "array",
          "xml": {
            "name": "degreeOfRecognition"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "relatedEvents": {
          "type": "array",
          "xml": {
            "name": "relatedEvent",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSEventRef"
          }
        },
        "location": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "subdivisions": {
          "type": "array",
          "xml": {
            "name": "subdivision"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisers": {
          "type": "array",
          "xml": {
            "name": "organiser",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSInternalExternalOrganisationAssociation"
          }
        },
        "sponsorOrganisations": {
          "type": "array",
          "xml": {
            "name": "sponsorOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSInternalExternalOrganisationAssociation"
          }
        },
        "geoLocation": {
          "$ref": "#/definitions/WSGeoLocation"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        }
      },
      "xml": {
        "name": "event"
      }
    },
    "WSNavigationLink": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "href": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSUuidList": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "uuids": {
          "type": "array",
          "xml": {
            "name": "uuid"
          },
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WSAccountEntry": {
      "type": "object",
      "properties": {
        "yearMonth": {
          "$ref": "#/definitions/WSCompoundDate"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSVisibility": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "FREE",
            "CAMPUS",
            "BACKEND"
          ]
        }
      }
    },
    "WSClassifiedLocalizedValue": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "typeUri": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "type": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSErrorResult": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "error"
      }
    },
    "WSEventRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSEvent"
        }
      }
    },
    "WSElectronicVersionAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "accessTypes": {
          "type": "array",
          "xml": {
            "name": "accessType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "versionTypes": {
          "type": "array",
          "xml": {
            "name": "versionType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "embargoPeriod": {
          "$ref": "#/definitions/WSDateRange"
        },
        "licenseTypes": {
          "type": "array",
          "xml": {
            "name": "licenseType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "userDefinedLicense": {
          "type": "string"
        },
        "visibleOnPortalDate": {
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WSExternalPersonRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSExternalPerson"
        }
      }
    },
    "WSExternalOrganisation": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "name": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "natureTypes": {
          "type": "array",
          "xml": {
            "name": "natureType",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "parent": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "acronym": {
          "type": "string"
        },
        "alternativeNames": {
          "type": "array",
          "xml": {
            "name": "alternativeName",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "address": {
          "$ref": "#/definitions/WSAddress"
        },
        "phoneNumber": {
          "type": "string"
        },
        "mobilePhoneNumber": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "bankAccountNumber": {
          "type": "string"
        },
        "vatNumber": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "note": {
          "type": "string"
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "externalOrganisation"
      }
    },
    "WSOrganisationRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSOrganisation"
        }
      }
    },
    "WSCurriculumVitaeListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSCurriculumVitae"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSUPMProjectsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "projectStatus": {
          "type": "string",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "FINISHED",
            "CURTAILED"
          ]
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        }
      },
      "xml": {
        "name": "projectsQuery"
      }
    },
    "WSStaffOrganisationAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "affiliationId": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "xml": {
            "name": "address",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAddress"
          }
        },
        "emails": {
          "type": "array",
          "xml": {
            "name": "email",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "xml": {
            "name": "phoneNumber",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "employmentTypes": {
          "type": "array",
          "xml": {
            "name": "employmentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "webAddresses": {
          "type": "array",
          "xml": {
            "name": "webAddress",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "contractTypes": {
          "type": "array",
          "xml": {
            "name": "contractType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "staffTypes": {
          "type": "array",
          "xml": {
            "name": "staffType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "jobDescriptions": {
          "type": "array",
          "xml": {
            "name": "jobDescription"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "jobTitles": {
          "type": "array",
          "xml": {
            "name": "jobTitle"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "fte": {
          "type": "number",
          "format": "double"
        },
        "primaryAssociation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSAwardFundingAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "funder": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "fundingClassifications": {
          "type": "array",
          "xml": {
            "name": "fundingClassification"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "fundingProjectScheme": {
          "type": "string"
        },
        "financial": {
          "type": "boolean",
          "default": false
        },
        "estimatedValue": {
          "type": "number",
          "format": "double"
        },
        "nonFinancialDescription": {
          "type": "string"
        },
        "awardedAmountInAwardedCurrency": {
          "type": "number",
          "format": "double"
        },
        "awardedCurrencies": {
          "type": "array",
          "xml": {
            "name": "awardedCurrency"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "awardedAmount": {
          "type": "number",
          "format": "double"
        },
        "institutionalEstimatedValue": {
          "type": "number",
          "format": "double"
        },
        "institutionalPart": {
          "type": "number",
          "format": "double"
        },
        "institutionalContribution": {
          "type": "number",
          "format": "double"
        },
        "institutionalFEC": {
          "type": "number",
          "format": "double"
        },
        "fundingCollaborators": {
          "type": "array",
          "xml": {
            "name": "fundingCollaborator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSFundingCollaboratorAssociation"
          }
        },
        "budgetAndExpenditures": {
          "type": "array",
          "xml": {
            "name": "budgetAndExpenditure",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSFundingExpenditureAssociation"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "fecpercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSCompoundDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WSPerson": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "genders": {
          "type": "array",
          "xml": {
            "name": "gender"
          },
          "description": "Only available if it is made public",
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date-time",
          "description": "Only available if it is made public"
        },
        "nationalities": {
          "type": "array",
          "xml": {
            "name": "nationality"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "nameVariants": {
          "type": "array",
          "xml": {
            "name": "nameVariant",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedName"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "orcid": {
          "type": "string"
        },
        "profilePhotos": {
          "type": "array",
          "xml": {
            "name": "profilePhoto",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedFileRef"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "startDateAsResearcher": {
          "type": "string",
          "format": "date-time"
        },
        "retirementDate": {
          "type": "string",
          "format": "date-time"
        },
        "profiled": {
          "type": "boolean",
          "description": "Only available when the Author Profile module is enabled",
          "default": false
        },
        "scopusHIndex": {
          "type": "integer",
          "format": "int32"
        },
        "profileInformations": {
          "type": "array",
          "xml": {
            "name": "profileInformation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "studentOrganisationAssociations": {
          "type": "array",
          "xml": {
            "name": "studentOrganisationAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSStudentOrganisationAssociation"
          }
        },
        "staffOrganisationAssociations": {
          "type": "array",
          "xml": {
            "name": "staffOrganisationAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSStaffOrganisationAssociation"
          }
        },
        "visitingScholarOrganisationAssociations": {
          "type": "array",
          "xml": {
            "name": "visitingScholarOrganisationAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSVisitingScholarOrganisationAssociation"
          }
        },
        "honoraryStaffOrganisationAssociations": {
          "type": "array",
          "xml": {
            "name": "honoraryStaffOrganisationAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSHonoraryStaffOrganisationAssociation"
          }
        },
        "supervisorForRelations": {
          "type": "array",
          "xml": {
            "name": "supervisorForRelation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSPersonSupervisorAssociation"
          }
        },
        "leaveOfAbsence": {
          "description": "Only available when the proper configuration is enabled",
          "$ref": "#/definitions/WSPersonClassifiedLeaveOfAbsence"
        },
        "employeeStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "employeeEndDate": {
          "type": "string",
          "format": "date-time"
        },
        "fte": {
          "type": "number",
          "format": "double"
        },
        "affiliationNote": {
          "type": "string",
          "description": "Only available when the proper configuration is enabled"
        },
        "externalPositions": {
          "type": "array",
          "xml": {
            "name": "externalPosition",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSPersonExternalPosition"
          }
        },
        "educations": {
          "type": "array",
          "xml": {
            "name": "education",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSPersonEducation"
          }
        },
        "professionalQualifications": {
          "type": "array",
          "xml": {
            "name": "professionalQualification",
            "wrapped": true
          },
          "description": "Only available when the proper configuration is enabled",
          "items": {
            "$ref": "#/definitions/WSProfessionalQualification"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "willTakePhdStudents": {
          "type": "boolean",
          "description": "Only available when the proper configuration is enabled",
          "default": false
        },
        "phdResearchProjects": {
          "type": "string",
          "description": "Only available when the proper configuration is enabled"
        },
        "privateAddress": {
          "description": "Only available when the proper configuration is enabled",
          "$ref": "#/definitions/WSClassifiedAddress"
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "expert": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "person"
      }
    },
    "WSEventsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "type": "string"
          }
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "eventsQuery"
      }
    },
    "WSPressMediaQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "managingOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        }
      },
      "xml": {
        "name": "pressMediaQuery"
      }
    },
    "WSClassifiedCourseDevelopedByAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        }
      }
    },
    "WSDataSetLegalCondition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "WSOrganisation": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "nameVariants": {
          "type": "array",
          "xml": {
            "name": "nameVariant",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "profileInformations": {
          "type": "array",
          "xml": {
            "name": "profileInformation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "photos": {
          "type": "array",
          "xml": {
            "name": "photo",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedFileRef"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "addresses": {
          "type": "array",
          "xml": {
            "name": "address",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAddress"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "xml": {
            "name": "phoneNumber",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "emails": {
          "type": "array",
          "xml": {
            "name": "email",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "webAddresses": {
          "type": "array",
          "xml": {
            "name": "webAddress",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "takenOverBy": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "parents": {
          "type": "array",
          "xml": {
            "name": "parent",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "costCenters": {
          "type": "array",
          "xml": {
            "name": "costCenter",
            "wrapped": true
          },
          "description": "Only available on the DK and UK bases",
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "organisationalUnit"
      }
    },
    "WSFingerprintListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSFingerprint"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSEquipment": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "acquisitionDate": {
          "type": "string",
          "format": "date-time"
        },
        "responsiblePerson": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "equipment"
      }
    },
    "WSExternalOrganisationListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSExternalOrganisation"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSPersonOrganisationAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "affiliationId": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "xml": {
            "name": "address",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAddress"
          }
        },
        "emails": {
          "type": "array",
          "xml": {
            "name": "email",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "xml": {
            "name": "phoneNumber",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "employmentTypes": {
          "type": "array",
          "xml": {
            "name": "employmentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "webAddresses": {
          "type": "array",
          "xml": {
            "name": "webAddress",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "primaryAssociation": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "IntervalInteger": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "includeMin": {
          "type": "boolean",
          "default": false
        },
        "includeMax": {
          "type": "boolean",
          "default": false
        },
        "degenerate": {
          "type": "boolean",
          "default": false
        },
        "emptySet": {
          "type": "boolean",
          "default": false
        },
        "bounded": {
          "type": "boolean",
          "default": false
        },
        "unBounded": {
          "type": "boolean",
          "default": false
        },
        "closed": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WSPersonListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSPerson"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSApplicationsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "statusUris": {
          "type": "array",
          "xml": {
            "name": "statusUri"
          },
          "items": {
            "type": "string"
          }
        },
        "financial": {
          "type": "boolean",
          "default": false
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "externalCollaborators": {
          "$ref": "#/definitions/WSExternalOrganisationsQuery"
        },
        "internalCollaborators": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "managingOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forProjects": {
          "$ref": "#/definitions/WSUPMProjectsQuery"
        },
        "forAwards": {
          "$ref": "#/definitions/WSAwardsQuery"
        }
      },
      "xml": {
        "name": "applicationsQuery"
      }
    },
    "WSAward": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "natureTypes": {
          "type": "array",
          "xml": {
            "name": "natureType",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "$ref": "#/definitions/WSAwardStatus"
          }
        },
        "statusDetails": {
          "description": "Only available when the Award Management module is enabled",
          "$ref": "#/definitions/WSAwardStatusDetails"
        },
        "shortTitles": {
          "type": "array",
          "xml": {
            "name": "shortTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "acronym": {
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "awardholders": {
          "type": "array",
          "xml": {
            "name": "awardholder",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAwardholderAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "collaborative": {
          "type": "boolean",
          "default": false
        },
        "collaborators": {
          "type": "array",
          "xml": {
            "name": "collaborator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSCollaboratorAssociation"
          }
        },
        "totalAcademicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        },
        "fundings": {
          "type": "array",
          "xml": {
            "name": "funding",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAwardFundingAssociation"
          }
        },
        "totalAwardedAmount": {
          "type": "number",
          "format": "double"
        },
        "totalSpendAmount": {
          "type": "number",
          "format": "double"
        },
        "actualPeriod": {
          "$ref": "#/definitions/WSDateRange"
        },
        "expectedPeriod": {
          "$ref": "#/definitions/WSDateRange"
        },
        "awardDate": {
          "type": "string",
          "format": "date-time"
        },
        "curtailed": {
          "type": "boolean",
          "default": false
        },
        "curtailDate": {
          "type": "string",
          "format": "date-time"
        },
        "curtailReason": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "relatedProject": {
          "$ref": "#/definitions/WSUPMProjectRef"
        },
        "relatedApplications": {
          "type": "array",
          "xml": {
            "name": "relatedApplication",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSApplicationRef"
          }
        },
        "relatedAwards": {
          "type": "array",
          "xml": {
            "name": "relatedAward",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAwardRef"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "award"
      }
    },
    "WSUPMProject": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "natureTypes": {
          "type": "array",
          "xml": {
            "name": "natureType",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "$ref": "#/definitions/WSUPMProjectStatus"
          }
        },
        "shortTitles": {
          "type": "array",
          "xml": {
            "name": "shortTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "acronym": {
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "participants": {
          "type": "array",
          "xml": {
            "name": "participant",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedParticipantAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "collaborative": {
          "type": "boolean",
          "default": false
        },
        "collaborators": {
          "type": "array",
          "xml": {
            "name": "collaborator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSCollaboratorAssociation"
          }
        },
        "totalAcademicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "curtailed": {
          "type": "boolean",
          "default": false
        },
        "curtailDate": {
          "type": "string",
          "format": "date-time"
        },
        "curtailReason": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "relatedApplications": {
          "type": "array",
          "xml": {
            "name": "relatedApplication",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSApplicationRef"
          }
        },
        "relatedAwards": {
          "type": "array",
          "xml": {
            "name": "relatedAward",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAwardRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSUPMProjectAssociation"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the DataSet module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedStudentThesis": {
          "type": "array",
          "xml": {
            "name": "relatedStudentTheses",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "project"
      }
    },
    "WSAbstractActivity": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "title": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "categories": {
          "type": "array",
          "xml": {
            "name": "category"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "degreeOfRecognitions": {
          "type": "array",
          "xml": {
            "name": "degreeOfRecognition"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedPersonAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "indicators": {
          "type": "array",
          "xml": {
            "name": "indicator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the Dataset module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedStudentThesis": {
          "type": "array",
          "xml": {
            "name": "relatedStudentTheses",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "activity"
      }
    },
    "WSPressMediaRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSPressMedia"
        }
      }
    },
    "WSClassifiedPersonAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        }
      }
    },
    "WSActivityRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSAbstractActivity"
        }
      }
    },
    "WSPersonSupervisorAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "supervisor": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalSupervisor": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "supervisionPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "supervisorRoles": {
          "type": "array",
          "xml": {
            "name": "supervisorRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "student": {
          "$ref": "#/definitions/WSPersonOrganisationAssociation"
        }
      }
    },
    "WSApplicationRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSApplication"
        }
      }
    },
    "WSJournal": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSTemporalTitle"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "alternativeTitles": {
          "type": "array",
          "xml": {
            "name": "alternativeTitle",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "electronicISSNs": {
          "type": "array",
          "xml": {
            "name": "electronicISSN",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "alternativeISSNs": {
          "type": "array",
          "xml": {
            "name": "alternativeISSN",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "doajIndexed": {
          "type": "boolean",
          "default": false
        },
        "preprintArchiving": {
          "type": "string"
        },
        "preprintRestrictions": {
          "type": "array",
          "xml": {
            "name": "preprintRestriction",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "postprintArchiving": {
          "type": "string"
        },
        "postprintRestrictions": {
          "type": "array",
          "xml": {
            "name": "postprintRestriction",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "postprintConditions": {
          "type": "array",
          "xml": {
            "name": "postprintCondition",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "postprintCopyright": {
          "type": "string"
        },
        "pdfArchiving": {
          "type": "string"
        },
        "pdfRestrictions": {
          "type": "array",
          "xml": {
            "name": "pdfRestriction",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "sherpaRomeoColors": {
          "type": "array",
          "xml": {
            "name": "sherpaRomeoColor"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "scopusMetrics": {
          "type": "array",
          "xml": {
            "name": "scopusMetric",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSScopusMetrics"
          }
        },
        "publisher": {
          "$ref": "#/definitions/WSPublisherRef"
        },
        "sherpaRomeoCustomerInformation": {
          "type": "string"
        },
        "issns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSTemporalISSN"
          }
        }
      },
      "xml": {
        "name": "journal"
      }
    },
    "WSDataSet": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description"
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "temporalCoveragePeriod": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "dataProductionPeriod": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "associatedId",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "geographicalCoverages": {
          "type": "array",
          "xml": {
            "name": "geographicalCoverage"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "geoLocation": {
          "$ref": "#/definitions/WSGeoLocation"
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedDataSetPersonAssociation"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "publisher": {
          "$ref": "#/definitions/WSPublisherRef"
        },
        "doi": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "physicalDatas": {
          "type": "array",
          "xml": {
            "name": "physicalData",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDataSetPhysicalData"
          }
        },
        "contactPerson": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "legalConditions": {
          "type": "array",
          "xml": {
            "name": "legalCondition",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDataSetLegalCondition"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "publicationDate": {
          "$ref": "#/definitions/WSCompoundDate"
        },
        "openAccessPermissions": {
          "type": "array",
          "xml": {
            "name": "openAccessPermission"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSets",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProjects",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedStudentThesis": {
          "type": "array",
          "xml": {
            "name": "relatedStudentTheses",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "natureTypes": {
          "type": "array",
          "xml": {
            "name": "natureType",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "openAccessEmbargoMonths": {
          "type": "integer",
          "format": "int32"
        },
        "openAccessEmbargoDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "dataSet"
      }
    },
    "WSCompoundDateRange": {
      "type": "object",
      "properties": {
        "startDate": {
          "$ref": "#/definitions/WSCompoundDate"
        },
        "endDate": {
          "$ref": "#/definitions/WSCompoundDate"
        }
      }
    },
    "WSResearchOutputListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSResearchOutput"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSAddress": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "subdivisions": {
          "type": "array",
          "xml": {
            "name": "subdivision"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "state": {
          "type": "string"
        },
        "geoLocation": {
          "$ref": "#/definitions/WSGeoLocation"
        }
      },
      "xml": {
        "name": "address"
      }
    },
    "WSCollaboratorAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "leadCollaborator": {
          "type": "boolean",
          "default": false
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "externalOrganisation": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        }
      }
    },
    "WSFundingOpportunityRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSFundingOpportunity"
        }
      }
    },
    "WSUsedContent": {
      "type": "object",
      "properties": {
        "rendering": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "usedContent": {
          "type": "array",
          "xml": {
            "name": "uuids"
          },
          "items": {
            "$ref": "#/definitions/WSUuidList"
          }
        }
      }
    },
    "WSSecondarySource": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "sourceId": {
          "type": "string"
        }
      }
    },
    "WSClassifiedAwardholderAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "academicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSPublishersQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "type": "string"
          }
        },
        "countryUris": {
          "type": "array",
          "xml": {
            "name": "countryUri"
          },
          "items": {
            "type": "string"
          }
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "publishersQuery"
      }
    },
    "WSTemporalISSN": {
      "type": "object",
      "properties": {
        "issn": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "endDate": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSFileRef": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "fileURL": {
          "type": "string"
        },
        "digestAlgorithm": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        }
      }
    },
    "WSKeywordGroup": {
      "type": "object",
      "properties": {
        "logicalName": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "keywords": {
          "type": "array",
          "xml": {
            "name": "keyword",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeyword"
          }
        }
      }
    },
    "WSPressMedia": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "categories": {
          "type": "array",
          "xml": {
            "name": "category"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "references": {
          "type": "array",
          "xml": {
            "name": "reference",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSReference"
          }
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedPersonAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "event": {
          "$ref": "#/definitions/WSEventRef"
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the DataSet module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedStudentThesis": {
          "type": "array",
          "xml": {
            "name": "relatedStudentTheses",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "pressMedia"
      }
    },
    "WSProfessionalQualification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "qualifications": {
          "type": "array",
          "xml": {
            "name": "qualification"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "abbreviatedQualifications": {
          "type": "array",
          "xml": {
            "name": "abbreviatedQualification"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        }
      }
    },
    "WSExternalPerson": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "genders": {
          "type": "array",
          "xml": {
            "name": "gender"
          },
          "items": {
            "$ref": "#/definitions/WSGender"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "externalPerson"
      }
    },
    "WSAbstractChange": {
      "type": "object"
    },
    "WSExternalOrganisationsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        }
      },
      "xml": {
        "name": "externalOrganisationsQuery"
      }
    },
    "WSClassificationSchemesQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "baseUri": {
          "type": "string"
        },
        "containedClassificationUris": {
          "type": "array",
          "xml": {
            "name": "containedClassificationUri"
          },
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "classificationSchemesQuery"
      }
    },
    "WSOrganisationListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSOrganisation"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSCurriculumVitaeQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        }
      },
      "xml": {
        "name": "curriculumVitaeQuery"
      }
    },
    "WSFundingOpportunitiesQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        }
      },
      "xml": {
        "name": "fundingOpportunitiesQuery"
      }
    },
    "WSPrizeListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSPrize"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSAwardStatus": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "NO_STATUS",
            "NOT_STARTED",
            "RUNNING",
            "FINISHED",
            "CURTAILED",
            "DECLINED",
            "INTERNALLY_APPROVED",
            "IN_CONTRACT_NEGOTIATION"
          ]
        }
      }
    },
    "WSResearchOutputRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSResearchOutput"
        }
      }
    },
    "WSCoursesQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "courseStatus": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "FORMER"
          ]
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "type": "string"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "type": "string"
          }
        },
        "formats": {
          "type": "array",
          "xml": {
            "name": "format"
          },
          "items": {
            "type": "string"
          }
        },
        "courseLevels": {
          "type": "array",
          "xml": {
            "name": "courseLevel"
          },
          "items": {
            "type": "string"
          }
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forLecturerOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forLecturers": {
          "$ref": "#/definitions/WSPersonsQuery"
        }
      },
      "xml": {
        "name": "coursesQuery"
      }
    },
    "WSApplicationDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "title": {
          "type": "string"
        },
        "documentTypes": {
          "type": "array",
          "xml": {
            "name": "documentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "url": {
          "type": "string"
        },
        "documentLicenses": {
          "type": "array",
          "xml": {
            "name": "documentLicense"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "visibleOnPortalDate": {
          "type": "string",
          "format": "date-time"
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "creator": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "documentVersionTypes": {
          "type": "array",
          "xml": {
            "name": "documentVersionType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        }
      }
    },
    "WSAwardRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSAward"
        }
      }
    },
    "WSWorkflow": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "workflowStep": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        }
      }
    },
    "WSResearchOutput": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "title": {
          "type": "string"
        },
        "subTitle": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "categories": {
          "type": "array",
          "xml": {
            "name": "category"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "peerReview": {
          "type": "boolean",
          "default": false
        },
        "internationalPeerReview": {
          "type": "boolean",
          "default": false
        },
        "publicationStatuses": {
          "type": "array",
          "xml": {
            "name": "publicationStatus",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSPublicationStatus"
          }
        },
        "languages": {
          "type": "array",
          "xml": {
            "name": "language"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "translatedTitles": {
          "type": "array",
          "xml": {
            "name": "translatedTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "translatedSubTitles": {
          "type": "array",
          "xml": {
            "name": "translatedSubTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "numberOfPages": {
          "type": "integer",
          "format": "int32"
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "abstracts": {
          "type": "array",
          "xml": {
            "name": "abstract"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedAuthorAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "openAccessPermissions": {
          "type": "array",
          "xml": {
            "name": "openAccessPermission"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "openAccessEmbargoMonths": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "embargoMonths"
          }
        },
        "openAccessEmbargoDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "embargoEndDate"
          }
        },
        "submissionYear": {
          "type": "integer",
          "format": "int32",
          "description": "Only available when this field has been enabled"
        },
        "mainResearchArea": {
          "type": "array",
          "description": "Only available when the BFI module is enabled",
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "electronicVersions": {
          "type": "array",
          "xml": {
            "name": "electronicVersion",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSElectronicVersionAssociation"
          }
        },
        "additionalFiles": {
          "type": "array",
          "xml": {
            "name": "additionalFile",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSElectronicVersionAdditionalFileAssociation"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "additionalLink",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "articleProcessingChargePaid": {
          "type": "boolean",
          "default": false
        },
        "articleProcessingChargeAmountInArticleProcessingChargeCurrency": {
          "type": "number",
          "format": "double"
        },
        "articleProcessingChargesCurrency": {
          "type": "array",
          "xml": {
            "name": "articleProcessingChargeCurrency"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "bibliographicalNotes": {
          "type": "array",
          "xml": {
            "name": "bibliographicalNote"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "description": "Only available when the Impact module is enabled",
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the DataSet module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "relatedStudentTheses": {
          "type": "array",
          "xml": {
            "name": "relatedStudentThesis",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "totalScopusCitations": {
          "type": "integer",
          "format": "int32"
        },
        "scopusMetrics": {
          "type": "array",
          "xml": {
            "name": "scopusMetric",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputMetric"
          }
        },
        "articleProcessingChargeAmount": {
          "type": "number",
          "format": "double"
        }
      },
      "xml": {
        "name": "researchOutput"
      }
    },
    "WSStudentThesisDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "title": {
          "type": "string"
        },
        "documentTypes": {
          "type": "array",
          "xml": {
            "name": "documentType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "url": {
          "type": "string"
        },
        "documentLicenses": {
          "type": "array",
          "xml": {
            "name": "documentLicense"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "visibleOnPortalDate": {
          "type": "string",
          "format": "date-time"
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "creator": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "documentVersionTypes": {
          "type": "array",
          "xml": {
            "name": "documentVersionType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "embargoReasons": {
          "type": "array",
          "xml": {
            "name": "embargoReason"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "rightsStatement": {
          "type": "string"
        },
        "embargoDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WSPersonClassifiedLeaveOfAbsence": {
      "type": "object",
      "properties": {
        "typesOfLeave": {
          "type": "array",
          "xml": {
            "name": "typeOfLeave"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        }
      }
    },
    "WSMetaFeature": {
      "type": "object",
      "properties": {
        "feature": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "WSGender": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "MALE",
            "FEMALE",
            "UNKNOWN"
          ]
        }
      }
    },
    "WSOrderingsList": {
      "type": "object",
      "properties": {
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "orderings"
      }
    },
    "WSImpact": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "categories": {
          "type": "array",
          "xml": {
            "name": "category",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "levels": {
          "type": "array",
          "xml": {
            "name": "level"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "associatedId",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "participants": {
          "type": "array",
          "xml": {
            "name": "participant",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSImpactClassifiedParticipantAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "evidenceList": {
          "type": "array",
          "xml": {
            "name": "evidence",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSImpactEvidence"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "relatedImpacts": {
          "type": "array",
          "xml": {
            "name": "relatedImpact",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSImpactRef"
          }
        },
        "relatedPressMedia": {
          "type": "array",
          "xml": {
            "name": "relatedPressMedia",
            "wrapped": true
          },
          "description": "Only available when the Press / Media module is enabled",
          "items": {
            "$ref": "#/definitions/WSPressMediaRef"
          }
        },
        "relatedResearchOutputs": {
          "type": "array",
          "xml": {
            "name": "relatedResearchOutput",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSResearchOutputRef"
          }
        },
        "relatedActivities": {
          "type": "array",
          "xml": {
            "name": "relatedActivity",
            "wrapped": true
          },
          "description": "Only available when the Activity module is enabled",
          "items": {
            "$ref": "#/definitions/WSActivityRef"
          }
        },
        "relatedProjects": {
          "type": "array",
          "xml": {
            "name": "relatedProject",
            "wrapped": true
          },
          "description": "Only available when the Unified Project Model module is enabled",
          "items": {
            "$ref": "#/definitions/WSUPMProjectRef"
          }
        },
        "relatedPrizes": {
          "type": "array",
          "xml": {
            "name": "relatedPrize",
            "wrapped": true
          },
          "description": "Only available when the Prize module is enabled",
          "items": {
            "$ref": "#/definitions/WSPrizeRef"
          }
        },
        "relatedStudentTheses": {
          "type": "array",
          "xml": {
            "name": "relatedStudentThesis",
            "wrapped": true
          },
          "description": "Only available when the Student Thesis module is enabled",
          "items": {
            "$ref": "#/definitions/WSStudentThesisRef"
          }
        },
        "relatedDataSets": {
          "type": "array",
          "xml": {
            "name": "relatedDataSet",
            "wrapped": true
          },
          "description": "Only available when the Dataset module is enabled",
          "items": {
            "$ref": "#/definitions/WSDataSetRef"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        }
      },
      "xml": {
        "name": "impact"
      }
    },
    "WSEthicalReview": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "replies": {
          "type": "array",
          "xml": {
            "name": "reply"
          },
          "items": {
            "$ref": "#/definitions/WSEthicalReviewReply"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "relatedApplication": {
          "$ref": "#/definitions/WSApplicationRef"
        },
        "personAssociations": {
          "type": "array",
          "xml": {
            "name": "personAssociation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedPersonAssociation"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSEthicalReviewDocument"
          }
        },
        "links": {
          "type": "array",
          "xml": {
            "name": "link",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSLink"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "ethicalReview"
      }
    },
    "WSRenderingsList": {
      "type": "object",
      "properties": {
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "renderings"
      }
    },
    "WSResidencyFlag": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "HOME",
            "OVERSEAS"
          ]
        }
      }
    },
    "WSEquipmentsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        }
      },
      "xml": {
        "name": "equipmentsQuery"
      }
    },
    "WSStudentThesisListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSStudentThesis"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSUPMProjectRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSUPMProject"
        }
      }
    },
    "WSPublisher": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "name": {
          "type": "string"
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "alternativeNames": {
          "type": "array",
          "xml": {
            "name": "alternativeName",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "publisher"
      }
    },
    "WSERA2015FieldOfResearchAssociation": {
      "type": "object",
      "properties": {
        "fieldsOfResearch": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearch"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "splitPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSUPMProjectListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSUPMProject"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSImpactClassifiedParticipantAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "email": {
          "type": "string"
        },
        "externalNote": {
          "type": "string"
        },
        "externalOrganisation": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "sectors": {
          "type": "array",
          "xml": {
            "name": "sector"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "countries": {
          "type": "array",
          "xml": {
            "name": "country"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "academicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSAwardStatusDetails": {
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status"
          },
          "items": {
            "$ref": "#/definitions/WSAwardStatusDetailsStatus"
          }
        },
        "internallyApprovedDate": {
          "type": "string",
          "format": "date-time"
        },
        "declined": {
          "type": "boolean",
          "default": false
        },
        "declinationDate": {
          "type": "string",
          "format": "date-time"
        },
        "declinedReason": {
          "type": "string"
        },
        "relinquished": {
          "type": "boolean",
          "default": false
        },
        "relinquishmentDate": {
          "type": "string",
          "format": "date-time"
        },
        "relinquishmentReason": {
          "type": "string"
        }
      }
    },
    "WSFundingExpenditureAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "organisation": {
          "xml": {
            "name": "organisationalUnit"
          },
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "costCenters": {
          "type": "array",
          "xml": {
            "name": "costCenter"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "accounts": {
          "type": "array",
          "xml": {
            "name": "account",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAccount"
          }
        }
      }
    },
    "WSJournalListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSJournal"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSExternalPersonsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        }
      },
      "xml": {
        "name": "externalPersonsQuery"
      }
    },
    "WSJournalsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "type": "string"
          }
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "issns": {
          "type": "array",
          "xml": {
            "name": "issn"
          },
          "items": {
            "type": "string"
          }
        },
        "workflowSteps": {
          "type": "array",
          "xml": {
            "name": "workflowStep"
          },
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "journalsQuery"
      }
    },
    "WSDateRange": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WSAwardStatusDetailsStatus": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "formatted": {
          "type": "boolean",
          "xml": {
            "attribute": true
          },
          "default": false
        },
        "value": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "xml": {
            "attribute": true
          },
          "enum": [
            "ContractNegotiation",
            "InternallyApproved",
            "Terminated"
          ]
        }
      }
    },
    "WSLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "url": {
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "linkTypes": {
          "type": "array",
          "xml": {
            "name": "linkType"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        }
      }
    },
    "WSThesauriListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSThesauri"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSFingerprintsQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "contentIds": {
          "type": "array",
          "xml": {
            "name": "contentId"
          },
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "contentFamily": {
          "type": "string"
        }
      },
      "xml": {
        "name": "fingerprintsQuery"
      }
    },
    "WSClassificationSchemeRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSClassificationScheme"
        }
      }
    },
    "WSConceptRef": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "link": {
          "$ref": "#/definitions/WSNavigationLink"
        },
        "names": {
          "type": "array",
          "xml": {
            "name": "name"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "ref": {
          "$ref": "#/definitions/WSConceptRef"
        }
      }
    },
    "WSClassifiedDataSetPersonAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        }
      }
    },
    "WSStudentThesesQuery": {
      "type": "object",
      "properties": {
        "searchString": {
          "type": "string"
        },
        "uuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "linkingStrategy": {
          "type": "string"
        },
        "locales": {
          "type": "array",
          "xml": {
            "name": "locale"
          },
          "items": {
            "type": "string"
          }
        },
        "fallbackLocales": {
          "type": "array",
          "xml": {
            "name": "fallbackLocale"
          },
          "items": {
            "type": "string"
          }
        },
        "renderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderings": {
          "type": "array",
          "xml": {
            "name": "ordering"
          },
          "items": {
            "type": "string"
          }
        },
        "returnUsedContent": {
          "type": "boolean",
          "default": false
        },
        "navigationLink": {
          "type": "boolean",
          "default": false
        },
        "idClassification": {
          "type": "string"
        },
        "typeUris": {
          "type": "array",
          "xml": {
            "name": "typeUri"
          },
          "items": {
            "type": "string"
          }
        },
        "awardYears": {
          "$ref": "#/definitions/IntervalInteger"
        },
        "forOrganisationalUnits": {
          "$ref": "#/definitions/WSOrganisationsQuery"
        },
        "forPersons": {
          "$ref": "#/definitions/WSPersonsQuery"
        }
      },
      "xml": {
        "name": "studentThesesQuery"
      }
    },
    "WSClassifiedParticipantAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "person": {
          "$ref": "#/definitions/WSPersonRef"
        },
        "externalPerson": {
          "$ref": "#/definitions/WSExternalPersonRef"
        },
        "name": {
          "$ref": "#/definitions/WSName"
        },
        "personRoles": {
          "type": "array",
          "xml": {
            "name": "personRole"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "period": {
          "$ref": "#/definitions/WSDateRange"
        },
        "academicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        },
        "plannedResearcherCommitmentPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSPersonExternalPosition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "appointments": {
          "type": "array",
          "xml": {
            "name": "appointment"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "externalOrganisation": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "period": {
          "$ref": "#/definitions/WSCompoundDateRange"
        }
      }
    },
    "WSApplicationListResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "navigationLinks": {
          "type": "array",
          "xml": {
            "name": "navigationLink"
          },
          "items": {
            "$ref": "#/definitions/WSNavigationLink"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WSApplication"
          }
        }
      },
      "xml": {
        "name": "result"
      }
    },
    "WSGeoLocation": {
      "type": "object",
      "properties": {
        "point": {
          "type": "string"
        },
        "polygon": {
          "type": "string"
        },
        "calculatedPoint": {
          "type": "string"
        }
      }
    },
    "WSApplicationFundingAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "funder": {
          "$ref": "#/definitions/WSExternalOrganisationRef"
        },
        "fundingClassifications": {
          "type": "array",
          "xml": {
            "name": "fundingClassification"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "fundingProjectScheme": {
          "type": "string"
        },
        "financial": {
          "type": "boolean",
          "default": false
        },
        "estimatedValue": {
          "type": "number",
          "format": "double"
        },
        "nonFinancialDescription": {
          "type": "string"
        },
        "appliedAmountInAppliedCurrency": {
          "type": "number",
          "format": "double"
        },
        "appliedCurrencies": {
          "type": "array",
          "xml": {
            "name": "appliedCurrency"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "appliedAmount": {
          "type": "number",
          "format": "double"
        },
        "institutionalEstimatedValue": {
          "type": "number",
          "format": "double"
        },
        "institutionalPart": {
          "type": "number",
          "format": "double"
        },
        "institutionalContribution": {
          "type": "number",
          "format": "double"
        },
        "institutionalFEC": {
          "type": "number",
          "format": "double"
        },
        "fundingCollaborators": {
          "type": "array",
          "xml": {
            "name": "fundingCollaborator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSFundingCollaboratorAssociation"
          }
        },
        "budgetAndExpenditures": {
          "type": "array",
          "xml": {
            "name": "budgetAndExpenditure",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSFundingExpenditureAssociation"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "fecpercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "WSApplication": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "xml": {
            "attribute": true
          }
        },
        "htmlRenderings": {
          "type": "array",
          "xml": {
            "name": "rendering"
          },
          "items": {
            "$ref": "#/definitions/WSHtmlRendering"
          }
        },
        "titles": {
          "type": "array",
          "xml": {
            "name": "title"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "types": {
          "type": "array",
          "xml": {
            "name": "type"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "natureTypes": {
          "type": "array",
          "xml": {
            "name": "natureType",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "statuses": {
          "type": "array",
          "xml": {
            "name": "status",
            "wrapped": true
          },
          "description": "Not available when the Award Management module is enabled",
          "items": {
            "$ref": "#/definitions/WSApplicationStatus"
          }
        },
        "shortTitles": {
          "type": "array",
          "xml": {
            "name": "shortTitle"
          },
          "items": {
            "$ref": "#/definitions/WSLocalizedString"
          }
        },
        "acronym": {
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "xml": {
            "name": "description",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedLocalizedValue"
          }
        },
        "classifiedSources": {
          "type": "array",
          "xml": {
            "name": "id",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedValue"
          }
        },
        "fundingOpportunity": {
          "description": "Not available when the Award Management module is disabled",
          "$ref": "#/definitions/WSFundingOpportunityRef"
        },
        "applicants": {
          "type": "array",
          "xml": {
            "name": "applicant",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSClassifiedApplicantAssociation"
          }
        },
        "documents": {
          "type": "array",
          "xml": {
            "name": "document",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSApplicationDocument"
          }
        },
        "budgetDifference": {
          "type": "number",
          "format": "double"
        },
        "organisations": {
          "type": "array",
          "xml": {
            "name": "organisationalUnit",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSOrganisationRef"
          }
        },
        "externalOrganisations": {
          "type": "array",
          "xml": {
            "name": "externalOrganisation",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSExternalOrganisationRef"
          }
        },
        "managingOrganisationalUnit": {
          "$ref": "#/definitions/WSOrganisationRef"
        },
        "collaborative": {
          "type": "boolean",
          "default": false
        },
        "collaborators": {
          "type": "array",
          "xml": {
            "name": "collaborator",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSCollaboratorAssociation"
          }
        },
        "totalAcademicOwnershipPercentage": {
          "type": "number",
          "format": "double"
        },
        "fundings": {
          "type": "array",
          "xml": {
            "name": "funding",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSApplicationFundingAssociation"
          }
        },
        "totalAppliedAmount": {
          "type": "number",
          "format": "double"
        },
        "expectedPeriod": {
          "$ref": "#/definitions/WSDateRange"
        },
        "relatedProject": {
          "$ref": "#/definitions/WSUPMProjectRef"
        },
        "relatedApplications": {
          "type": "array",
          "xml": {
            "name": "relatedApplication",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSApplicationRef"
          }
        },
        "relatedAwards": {
          "type": "array",
          "xml": {
            "name": "relatedAward",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAwardRef"
          }
        },
        "relatedEthicalReviews": {
          "type": "array",
          "xml": {
            "name": "relatedEthicalReview",
            "wrapped": true
          },
          "description": "Only available when the Award Management module is enabled",
          "items": {
            "$ref": "#/definitions/WSEthicalReviewRef"
          }
        },
        "fieldOfResearchAssociations": {
          "type": "array",
          "xml": {
            "name": "fieldOfResearchAssociation",
            "wrapped": true
          },
          "description": "Only available when the ERA module is enabled",
          "items": {
            "$ref": "#/definitions/WSERA2015FieldOfResearchAssociation"
          }
        },
        "keywordGroups": {
          "type": "array",
          "xml": {
            "name": "keywordGroup",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSKeywordGroup"
          }
        },
        "visibilities": {
          "type": "array",
          "xml": {
            "name": "visibility"
          },
          "items": {
            "$ref": "#/definitions/WSVisibility"
          }
        },
        "confidential": {
          "type": "boolean",
          "default": false
        },
        "workflows": {
          "type": "array",
          "xml": {
            "name": "workflow"
          },
          "items": {
            "$ref": "#/definitions/WSWorkflow"
          }
        },
        "externalableInfo": {
          "$ref": "#/definitions/WSExternalableInformation"
        },
        "info": {
          "$ref": "#/definitions/WSContentInformation"
        }
      },
      "xml": {
        "name": "application"
      }
    },
    "WSAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "xml": {
            "attribute": true
          }
        },
        "costCenters": {
          "type": "array",
          "xml": {
            "name": "costCenter"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "classifications": {
          "type": "array",
          "xml": {
            "name": "classification"
          },
          "items": {
            "$ref": "#/definitions/WSClassification"
          }
        },
        "entries": {
          "type": "array",
          "xml": {
            "name": "entry",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSAccountEntry"
          }
        },
        "specification": {
          "type": "string"
        },
        "budget": {
          "type": "number",
          "format": "double"
        },
        "recoveryPercentage": {
          "type": "number",
          "format": "double"
        },
        "funderContribution": {
          "type": "number",
          "format": "double"
        },
        "yearlyBudgets": {
          "type": "array",
          "xml": {
            "name": "yearlyBudget",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/WSYearlyBudget"
          }
        }
      }
    },
    "WSAbstractCurriculumVitaeBlock": {
      "type": "object"
    }
  }
}